## CONFIGURATION FILE

# Configuration file for web_page_image_questionnaire.py program.
# This file contains the information to modify:
# 		the questions asked on the generated web page,
#		how to store the data from the respondents,
#		and hotkey modifications.

[TEXT]
# text that will be shown on web page

Title = Demonstration of questionnaire
# Description displayed on the startpage.
Start_Description = Demo 2
# Description displayed after the title and before the images.
Middle_Description = 
# Description displayed on the endpage.
End_Description = 
    All images have been identified.

[IMAGE_DISPLAY]
# when <questionnaire_name>_images_default_values.csv datasheet exists in the directory where configuration.ini file exists:
#  then for each image in Default_scale and Default_intensity will be overwritten by the values in <folder_name>_images_default_values.csv, 
#  if these values exists in the datasheet.

# Specify a path to the folder with the images that need to be displayed on the web page, 
# if left blank the program will default to display the images in the images folder of current directory.
Images_folder =

# Default scale is the scale that will be shown for the images on the left of the web page (the original image).
# If this is left blank then the original images, images will shown in program without scaling.
Default_scale = 200
# Rescaleability when enabled allows the evaluator to rescale the image with e slider displayed in the sidebar
Rescaleability = Enable
Max_scale = 50

[WORKFLOW]
Next_image_button_hotkey = Enter
# Only when all Questions in QUESTIONS section are of the multiple_choice type.
# When Enabled: Go to the next image immediatly when an option for each question is selected.
# When Disabled: Only go to the next image when Next_image_button/Next_image_hotkey is pressed. 
Change_image_after_choice_selection = Enable

[QUESTIONS]
# Questions have to be in the following form:
#	[name in database]      # Input options: a string (names how to store the data in the database) 
#	Question_type         	# Input options: multiple_choice, selection_box, check_box(this token is selected more then one option can be selected) or text_input.
#	Question_description    # Input options: a string
#	Options                 # Input options: an option is a string followed by a "," possible answer to the question.
# Options will not be read by program when Question_type = text_input
    [demo_question]
    Question_type = multiple_choice
    Question_description = multiple?
    Options = 1 <1>, 2 <2>, 3 <3>, 4 <4>

    [ABCD_demo_question]
    Question_type = multiple_choice
    Question_description = How diffuse is this brain tissue image?
    Options = A <5>, B <6>, C <7>, D <8>

    [comment]
    Question_type = text_input
    Question_description = Enter optional comment.

    [check_box_question]
    Question_type = check_box
    Question_description = check_box
    Options = option1 <q>, option2 <s>, option3 <d>
    
    [End_questions]

[DATABASE]
# if Database name is left blank the web_page_image_questionnaire.py program 
#   will connect/create a database named after the questionnaire directory,
# if a Database name is provided it will instead connect/create with the "Database_name".db
#  in the questionnaire directory. 
Database_name =

#Input options: Sample_with_separate_types, Only_sample , Full_name
Image_storing = Sample_with_separate_types

# create a datasheet for the session after the last image has been evaluated
Create_datasheet = Enable
